/*
 * Base style, that applies to all elements.
 */

@mixin shadow(){
    -webkit-box-shadow: 0px 0px 5px 0px rgba(50, 50, 50, 0.75);
    -moz-box-shadow:    0px 0px 5px 0px rgba(50, 50, 50, 0.75);
    box-shadow:         0px 0px 5px 0px rgba(50, 50, 50, 0.75);
}

@mixin radius($r : 6px){
    -webkit-border-radius: $r;
    -moz-border-radius:  $r;
    border-radius:  $r;
}

@mixin gradient($start: #000, $stop : #fff, $default : #000){
    background: $default;
    background: -moz-linear-gradient(top, $start 0%, $stop 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$stop));
    background: -webkit-linear-gradient(top, $start 0%,$stop 100%);
    background: -o-linear-gradient(top, $start 0%,$stop 100%);
    background: -ms-linear-gradient(top, $start 0%,$stop 100%);
    background: linear-gradient(to bottom, $start 0%,$stop 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start', endColorstr='$stop',GradientType=0 );
}

@mixin transition($style: all, $duration: 400ms, $effect: ease-out){
    -webkit-transition: $style $duration $effect;
    -moz-transition: $style $duration $effect;
    -ms-transition: $style $duration $effect;
    -o-transition: $style $duration $effect;
    transition: $style $duration $effect;
}

@mixin hover{
    @include transition;
}

@mixin unhover{
    @include transition(all, 300ms, ease-in) ;
}

@mixin intextshadow($color : #eee, $bg : #fff){
    
    color: $color;
    text-shadow: 1px 4px 6px $bg, 0 0 0 #000, 1px 4px 6px $bg;
    
    &::-moz-selection { text-shadow: none; }
    &::selection { text-shadow: none; }
}

@mixin respond-to($media : medium)  {
  $break-micro :  480px;
  $break-mini  :  768px;
  $break-small : 1024px;
  $break-wide  : 1280px;

  @if $media == micro {
    @media only screen and (max-width: $break-micro) { @content; }
  }
  @else if $media == mini {
    @media only screen and (min-width: $break-micro + 1) and (max-width: $break-mini) { @content; }
  }
  @else if $media == small {
    @media only screen and (max-width: $break-mini + 1) and (max-width: $break-small) { @content; }
  }
  @else if $media == medium {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-wide) { @content; }
  }
  @else if $media == wide {
    @media only screen and (min-width: $break-wide + 1) { @content; }
  }
}
